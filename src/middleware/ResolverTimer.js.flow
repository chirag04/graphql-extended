/* @flow */
/**
 * Flowtype definitions for ResolverTim
 * Generated by Flowgen from a Typescript Definition
 * Flowgen v1.2.0
 * Repo: https://github.com/scaphold-io/flowgen
 */

import {
    Middleware,
    ResolverContext
} from './Middleware';
import type {
    ExecutionContext
} from '../execution/ExecutionContext';
export type FieldTimerTimeUnit = 'milli' | 'micro' | 'nano';
declare export class ResolverTimer extends Middleware<Map<string, number>, number, mixed>{
    constructor(logger: (totalRunTime: number, resolverDurationMap: Map<string, number>) => mixed | void, timeUnit: FieldTimerTimeUnit): this;
    beforeQuery(): Map<string,
    number>;
    beforeField(): number;
    afterField(
        mVal: Map<string, number>,
        fValue: number,
        _value: mixed,
        _eCtx: ExecutionContext,
        mCtx: ResolverContext<mixed>): void;
    afterQuery(mVal: Map<string, number>): void
}